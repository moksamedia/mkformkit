'use strict';exports.__esModule=true;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactDates=require('react-dates');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**
 * Created by cantgetnosleep on 10/4/16.
 */var SingleDatePickerWrapper=function(_React$Component){_inherits(SingleDatePickerWrapper,_React$Component);function SingleDatePickerWrapper(props){_classCallCheck(this,SingleDatePickerWrapper);var _this=_possibleConstructorReturn(this,_React$Component.call(this,props));_this.state={focused:false,date:null};_this.onDateChange=_this.onDateChange.bind(_this);_this.onFocusChange=_this.onFocusChange.bind(_this);return _this;}SingleDatePickerWrapper.prototype.onDateChange=function onDateChange(date){this.setState({date:date});};SingleDatePickerWrapper.prototype.onFocusChange=function onFocusChange(_ref){var focused=_ref.focused;this.setState({focused:focused});};SingleDatePickerWrapper.prototype.render=function render(){var _state=this.state,focused=_state.focused,date=_state.date;return _react2.default.createElement(_reactDates.SingleDatePicker,_extends({},this.props,{id:'date_input',date:date,focused:focused,onDateChange:this.onDateChange,onFocusChange:this.onFocusChange}));};return SingleDatePickerWrapper;}(_react2.default.Component);exports.default=SingleDatePickerWrapper;